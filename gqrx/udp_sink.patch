diff -ruN a/gqrx/CMakeLists.txt b/gqrx/CMakeLists.txt
--- a/gqrx/CMakeLists.txt	2021-06-28 01:37:52.778539822 +0800
+++ b/gqrx/CMakeLists.txt	2021-06-28 01:39:39.603919491 +0800
@@ -121,8 +121,8 @@
 include(FindPkgConfig)
 find_package(Gnuradio-osmosdr REQUIRED)
 
-set(GR_REQUIRED_COMPONENTS RUNTIME ANALOG AUDIO BLOCKS DIGITAL FILTER FFT PMT)
-find_package(Gnuradio REQUIRED COMPONENTS analog audio blocks digital filter fft)
+set(GR_REQUIRED_COMPONENTS RUNTIME ANALOG AUDIO BLOCKS DIGITAL FILTER FFT NETWORK PMT)
+find_package(Gnuradio REQUIRED COMPONENTS analog audio blocks digital filter fft network)
 if(Gnuradio_VERSION VERSION_LESS "3.8")
     find_package(Volk)
 endif()
diff -ruN a/gqrx/src/CMakeLists.txt b/gqrx/src/CMakeLists.txt
--- a/gqrx/src/CMakeLists.txt	2021-06-28 01:37:52.786543821 +0800
+++ b/gqrx/src/CMakeLists.txt	2021-06-28 01:40:05.984101427 +0800
@@ -80,6 +80,7 @@
         gnuradio::gnuradio-digital
         gnuradio::gnuradio-filter
         gnuradio::gnuradio-audio
+        gnuradio::gnuradio-network
         Volk::volk
     )
 endif()
diff -ruN a/gqrx/src/interfaces/udp_sink_f.cpp b/gqrx/src/interfaces/udp_sink_f.cpp
--- a/gqrx/src/interfaces/udp_sink_f.cpp	2021-06-28 01:37:52.791546321 +0800
+++ b/gqrx/src/interfaces/udp_sink_f.cpp	2021-06-28 01:41:58.416282769 +0800
@@ -22,7 +22,8 @@
  */
 #include <gnuradio/hier_block2.h>
 #include <gnuradio/blocks/float_to_short.h>
-#include <gnuradio/blocks/udp_sink.h>
+#include <gnuradio/network/udp_header_types.h>
+#include <gnuradio/network/udp_sink.h>
 #include <gnuradio/io_signature.h>
 
 #include <iostream>
@@ -55,11 +56,10 @@
 #ifdef GQRX_OS_MACX
     // There seems to be excessive packet loss (even to localhost) on OS X
     // unless the buffer size is limited.
-    d_sink = gr::blocks::udp_sink::make(sizeof(short), "localhost", 7355, 512);
+    d_sink = gr::network::udp_sink::make(sizeof(short), 1, "localhost", 7355, HEADERTYPE_NONE, 512, false);
 #else
-    d_sink = gr::blocks::udp_sink::make(sizeof(short), "localhost", 7355);
+    d_sink = gr::network::udp_sink::make(sizeof(short), 1, "localhost", 7355, HEADERTYPE_NONE, 1472, false);
 #endif
-    d_sink->disconnect();
 
     d_inter = gr::blocks::interleave::make(sizeof(float));
     d_null0 = gr::blocks::null_sink::make(sizeof(float));
@@ -101,8 +101,6 @@
         connect(self(), 1, d_null0, 0);
     }
     unlock();
-
-    d_sink->connect(host, port);
 }
 
 
@@ -115,6 +113,4 @@
     unlock();
 
     std::cout << "Disconnected UDP streaming" << std::endl;
-
-    d_sink->disconnect();
 }
diff -ruN a/gqrx/src/interfaces/udp_sink_f.h b/gqrx/src/interfaces/udp_sink_f.h
--- a/gqrx/src/interfaces/udp_sink_f.h	2021-06-28 01:37:52.791546321 +0800
+++ b/gqrx/src/interfaces/udp_sink_f.h	2021-06-28 01:42:45.239679996 +0800
@@ -25,7 +25,7 @@
 
 #include <gnuradio/hier_block2.h>
 #include <gnuradio/blocks/float_to_short.h>
-#include <gnuradio/blocks/udp_sink.h>
+#include <gnuradio/network/udp_sink.h>
 #include <gnuradio/blocks/interleave.h>
 #include <gnuradio/blocks/null_sink.h>
 
@@ -50,7 +50,7 @@
     void stop_streaming(void);
 
 private:
-    gr::blocks::udp_sink::sptr        d_sink;   /*!< The gnuradio UDP sink. */
+    gr::network::udp_sink::sptr       d_sink;   /*!< The gnuradio UDP sink. */
     gr::blocks::float_to_short::sptr  d_f2s;    /*!< Converts float to short. */
     gr::blocks::interleave::sptr      d_inter;  /*!< Stereo interleaver. */
     gr::blocks::null_sink::sptr       d_null0;  /*!< Null sink for mono. */
