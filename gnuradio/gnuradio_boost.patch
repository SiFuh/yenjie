diff -u -r a/gnuradio/cmake/msvc/config.h b/gnuradio/cmake/msvc/config.h
--- a/gnuradio/cmake/msvc/config.h	2020-05-26 14:35:36.995597988 +0800
+++ b/gnuradio/cmake/msvc/config.h	2020-05-26 14:33:42.985721133 +0800
@@ -41,6 +41,14 @@
 #endif
 
 ////////////////////////////////////////////////////////////////////////
+// math constants
+////////////////////////////////////////////////////////////////////////
+#if _MSC_VER < 1800
+#include <math.h>
+#define INFINITY HUGE_VAL
+#endif
+
+////////////////////////////////////////////////////////////////////////
 // random and srandom
 ////////////////////////////////////////////////////////////////////////
 #include <stdlib.h>
diff -u -r "a/gnuradio/docs/usage-manual/(exported from wiki) Message Passing.txt" "b/gnuradio/docs/usage-manual/(exported from wiki) Message Passing.txt"
--- "a/gnuradio/docs/usage-manual/(exported from wiki) Message Passing.txt"	2020-05-26 14:35:37.006597880 +0800
+++ "b/gnuradio/docs/usage-manual/(exported from wiki) Message Passing.txt"	2020-05-26 14:33:42.994721044 +0800
@@ -95,7 +95,7 @@
 Boost's 'bind' function:
 
   set_msg_handler(pmt::pmt_t port_id,
-    boost::bind(&block_class::message_handler_function, this, _1));
+    boost::bind(&block_class::message_handler_function, this, boost::placeholders::_1));
 
 Or starting in GNU Radio 3.8 using C++11 we can avoid Boost and express the binding as a lambda function (preferred)
 
@@ -247,15 +247,15 @@
  {
    message_port_register_in(pmt::mp("print"));
    set_msg_handler(pmt::mp("print"),
-     boost::bind(&message_debug_impl::print, this, _1));
+     boost::bind(&message_debug_impl::print, this, boost::placeholders::_1));
  
    message_port_register_in(pmt::mp("store"));
    set_msg_handler(pmt::mp("store"),
-     boost::bind(&message_debug_impl::store, this, _1));
+     boost::bind(&message_debug_impl::store, this, boost::placeholders::_1));
  
    message_port_register_in(pmt::mp("print_pdu"));
    set_msg_handler(pmt::mp("print_pdu"),
-     boost::bind(&message_debug_impl::print_pdu, this, _1));
+     boost::bind(&message_debug_impl::print_pdu, this, boost::placeholders::_1));
  }
 </syntaxhighlight>

diff -u -r a/gnuradio/gnuradio-runtime/lib/block.cc b/gnuradio/gnuradio-runtime/lib/block.cc
--- a/gnuradio/gnuradio-runtime/lib/block.cc	2020-05-26 14:35:37.017597771 +0800
+++ b/gnuradio/gnuradio-runtime/lib/block.cc	2020-05-26 14:33:43.005720936 +0800
@@ -49,7 +49,8 @@
 {
     global_block_registry.register_primitive(alias(), this);
     message_port_register_in(d_system_port);
-    set_msg_handler(d_system_port, boost::bind(&block::system_handler, this, _1));
+    set_msg_handler(d_system_port,
+                    boost::bind(&block::system_handler, this, boost::placeholders::_1));
 }
 
 block::~block() { global_block_registry.unregister_primitive(symbol_name()); }
diff -u -r a/gnuradio/gr-analog/lib/sig_source_impl.cc b/gnuradio/gr-analog/lib/sig_source_impl.cc
--- a/gnuradio/gr-analog/lib/sig_source_impl.cc	2020-05-26 14:35:37.036597584 +0800
+++ b/gnuradio/gr-analog/lib/sig_source_impl.cc	2020-05-26 14:33:43.024720749 +0800
@@ -55,7 +55,9 @@
     this->set_phase(phase);
     this->message_port_register_in(pmt::mp("freq"));
     this->set_msg_handler(pmt::mp("freq"),
-                          boost::bind(&sig_source_impl<T>::set_frequency_msg, this, _1));
+                          boost::bind(&sig_source_impl<T>::set_frequency_msg,
+                                      this,
+                                      boost::placeholders::_1));
 }
 
 template <class T>
diff -u -r a/gnuradio/gr-blocks/grc/blocks_file_meta_sink.block.yml b/gnuradio/gr-blocks/grc/blocks_file_meta_sink.block.yml
--- a/gnuradio/gr-blocks/grc/blocks_file_meta_sink.block.yml	2020-05-26 14:35:37.047597476 +0800
+++ b/gnuradio/gr-blocks/grc/blocks_file_meta_sink.block.yml	2020-05-26 14:33:43.034720650 +0800
@@ -37,7 +37,7 @@
 -   id: extra_dict
     label: Extra Dict.
     dtype: raw
-    default: pmt.make_dict()
+    default: '""'
 -   id: detached
     label: Detached
     dtype: bool
diff -u -r a/gnuradio/gr-blocks/lib/copy_impl.cc b/gnuradio/gr-blocks/lib/copy_impl.cc
--- a/gnuradio/gr-blocks/lib/copy_impl.cc	2020-05-26 14:35:37.060597347 +0800
+++ b/gnuradio/gr-blocks/lib/copy_impl.cc	2020-05-26 14:33:43.048720512 +0800
@@ -32,7 +32,9 @@
       d_enabled(true)
 {
     message_port_register_in(pmt::mp("en"));
-    set_msg_handler(pmt::mp("en"), boost::bind(&copy_impl::handle_enable, this, _1));
+    set_msg_handler(
+        pmt::mp("en"),
+        boost::bind(&copy_impl::handle_enable, this, boost::placeholders::_1));
 }
 
 copy_impl::~copy_impl() {}
diff -u -r a/gnuradio/gr-blocks/lib/message_debug_impl.cc b/gnuradio/gr-blocks/lib/message_debug_impl.cc
--- a/gnuradio/gr-blocks/lib/message_debug_impl.cc	2020-05-26 14:35:37.064597308 +0800
+++ b/gnuradio/gr-blocks/lib/message_debug_impl.cc	2020-05-26 14:33:43.052720473 +0800
@@ -78,14 +78,19 @@
     : block("message_debug", io_signature::make(0, 0, 0), io_signature::make(0, 0, 0))
 {
     message_port_register_in(pmt::mp("print"));
-    set_msg_handler(pmt::mp("print"), boost::bind(&message_debug_impl::print, this, _1));
+    set_msg_handler(
+        pmt::mp("print"),
+        boost::bind(&message_debug_impl::print, this, boost::placeholders::_1));
 
     message_port_register_in(pmt::mp("store"));
-    set_msg_handler(pmt::mp("store"), boost::bind(&message_debug_impl::store, this, _1));
+    set_msg_handler(
+        pmt::mp("store"),
+        boost::bind(&message_debug_impl::store, this, boost::placeholders::_1));
 
     message_port_register_in(pmt::mp("print_pdu"));
-    set_msg_handler(pmt::mp("print_pdu"),
-                    boost::bind(&message_debug_impl::print_pdu, this, _1));
+    set_msg_handler(
+        pmt::mp("print_pdu"),
+        boost::bind(&message_debug_impl::print_pdu, this, boost::placeholders::_1));
 }
 
 message_debug_impl::~message_debug_impl() {}
diff -u -r a/gnuradio/gr-blocks/lib/message_strobe_impl.cc b/gnuradio/gr-blocks/lib/message_strobe_impl.cc
--- a/gnuradio/gr-blocks/lib/message_strobe_impl.cc	2020-05-26 14:35:37.064597308 +0800
+++ b/gnuradio/gr-blocks/lib/message_strobe_impl.cc	2020-05-26 14:33:43.052720473 +0800
@@ -41,8 +41,9 @@
     message_port_register_out(d_port);
 
     message_port_register_in(pmt::mp("set_msg"));
-    set_msg_handler(pmt::mp("set_msg"),
-                    boost::bind(&message_strobe_impl::set_msg, this, _1));
+    set_msg_handler(
+        pmt::mp("set_msg"),
+        boost::bind(&message_strobe_impl::set_msg, this, boost::placeholders::_1));
 }
 
 message_strobe_impl::~message_strobe_impl() {}
diff -u -r a/gnuradio/gr-blocks/lib/message_strobe_random_impl.cc b/gnuradio/gr-blocks/lib/message_strobe_random_impl.cc
--- a/gnuradio/gr-blocks/lib/message_strobe_random_impl.cc	2020-05-26 14:35:37.064597308 +0800
+++ b/gnuradio/gr-blocks/lib/message_strobe_random_impl.cc	2020-05-26 14:33:43.052720473 +0800
@@ -54,8 +54,9 @@
         new gr::thread::thread(boost::bind(&message_strobe_random_impl::run, this)));
 
     message_port_register_in(pmt::mp("set_msg"));
-    set_msg_handler(pmt::mp("set_msg"),
-                    boost::bind(&message_strobe_random_impl::set_msg, this, _1));
+    set_msg_handler(
+        pmt::mp("set_msg"),
+        boost::bind(&message_strobe_random_impl::set_msg, this, boost::placeholders::_1));
 }
 
 void message_strobe_random_impl::set_mean(float mean_ms)
diff -u -r a/gnuradio/gr-blocks/lib/multiply_matrix_impl.cc b/gnuradio/gr-blocks/lib/multiply_matrix_impl.cc
--- a/gnuradio/gr-blocks/lib/multiply_matrix_impl.cc	2020-05-26 14:35:37.064597308 +0800
+++ b/gnuradio/gr-blocks/lib/multiply_matrix_impl.cc	2020-05-26 14:33:43.052720473 +0800
@@ -223,9 +223,10 @@
 
     pmt::pmt_t port_name = pmt::string_to_symbol("set_A");
     message_port_register_in(port_name);
-    set_msg_handler(
-        port_name,
-        boost::bind(&multiply_matrix_impl<gr_complex>::msg_handler_A, this, _1));
+    set_msg_handler(port_name,
+                    boost::bind(&multiply_matrix_impl<gr_complex>::msg_handler_A,
+                                this,
+                                boost::placeholders::_1));
 }
 
 template <>
@@ -245,7 +246,9 @@
     pmt::pmt_t port_name = pmt::string_to_symbol("set_A");
     message_port_register_in(port_name);
     set_msg_handler(port_name,
-                    boost::bind(&multiply_matrix_impl<float>::msg_handler_A, this, _1));
+                    boost::bind(&multiply_matrix_impl<float>::msg_handler_A,
+                                this,
+                                boost::placeholders::_1));
 }
 
 
diff -u -r a/gnuradio/gr-blocks/lib/mute_impl.cc b/gnuradio/gr-blocks/lib/mute_impl.cc
--- a/gnuradio/gr-blocks/lib/mute_impl.cc	2020-05-26 14:35:37.064597308 +0800
+++ b/gnuradio/gr-blocks/lib/mute_impl.cc	2020-05-26 14:33:43.052720473 +0800
@@ -35,8 +35,9 @@
       d_mute(mute)
 {
     this->message_port_register_in(pmt::intern("set_mute"));
-    this->set_msg_handler(pmt::intern("set_mute"),
-                          boost::bind(&mute_impl<T>::set_mute_pmt, this, _1));
+    this->set_msg_handler(
+        pmt::intern("set_mute"),
+        boost::bind(&mute_impl<T>::set_mute_pmt, this, boost::placeholders::_1));
 }
 
 template <class T>
diff -u -r a/gnuradio/gr-blocks/lib/nop_impl.cc b/gnuradio/gr-blocks/lib/nop_impl.cc
--- a/gnuradio/gr-blocks/lib/nop_impl.cc	2020-05-26 14:35:37.065597298 +0800
+++ b/gnuradio/gr-blocks/lib/nop_impl.cc	2020-05-26 14:33:43.053720463 +0800
@@ -32,8 +32,9 @@
 {
     // Arrange to have count_received_msgs called when messages are received.
     message_port_register_in(pmt::mp("port"));
-    set_msg_handler(pmt::mp("port"),
-                    boost::bind(&nop_impl::count_received_msgs, this, _1));
+    set_msg_handler(
+        pmt::mp("port"),
+        boost::bind(&nop_impl::count_received_msgs, this, boost::placeholders::_1));
 }
 
 nop_impl::~nop_impl() {}
diff -u -r a/gnuradio/gr-blocks/lib/pdu_filter_impl.cc b/gnuradio/gr-blocks/lib/pdu_filter_impl.cc
--- a/gnuradio/gr-blocks/lib/pdu_filter_impl.cc	2020-05-26 14:35:37.065597298 +0800
+++ b/gnuradio/gr-blocks/lib/pdu_filter_impl.cc	2020-05-26 14:33:43.053720463 +0800
@@ -32,8 +32,9 @@
 {
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pdu::pdu_port_id());
-    set_msg_handler(pdu::pdu_port_id(),
-                    boost::bind(&pdu_filter_impl::handle_msg, this, _1));
+    set_msg_handler(
+        pdu::pdu_port_id(),
+        boost::bind(&pdu_filter_impl::handle_msg, this, boost::placeholders::_1));
 }
 
 void pdu_filter_impl::handle_msg(pmt::pmt_t pdu)
diff -u -r a/gnuradio/gr-blocks/lib/pdu_remove_impl.cc b/gnuradio/gr-blocks/lib/pdu_remove_impl.cc
--- a/gnuradio/gr-blocks/lib/pdu_remove_impl.cc	2020-05-26 14:35:37.065597298 +0800
+++ b/gnuradio/gr-blocks/lib/pdu_remove_impl.cc	2020-05-26 14:33:43.053720463 +0800
@@ -30,8 +30,9 @@
 {
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pdu::pdu_port_id());
-    set_msg_handler(pdu::pdu_port_id(),
-                    boost::bind(&pdu_remove_impl::handle_msg, this, _1));
+    set_msg_handler(
+        pdu::pdu_port_id(),
+        boost::bind(&pdu_remove_impl::handle_msg, this, boost::placeholders::_1));
 }
 
 void pdu_remove_impl::handle_msg(pmt::pmt_t pdu)
diff -u -r a/gnuradio/gr-blocks/lib/pdu_set_impl.cc b/gnuradio/gr-blocks/lib/pdu_set_impl.cc
--- a/gnuradio/gr-blocks/lib/pdu_set_impl.cc	2020-05-26 14:35:37.065597298 +0800
+++ b/gnuradio/gr-blocks/lib/pdu_set_impl.cc	2020-05-26 14:33:43.054720454 +0800
@@ -31,7 +31,9 @@
 {
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pdu::pdu_port_id());
-    set_msg_handler(pdu::pdu_port_id(), boost::bind(&pdu_set_impl::handle_msg, this, _1));
+    set_msg_handler(
+        pdu::pdu_port_id(),
+        boost::bind(&pdu_set_impl::handle_msg, this, boost::placeholders::_1));
 }
 
 void pdu_set_impl::handle_msg(pmt::pmt_t pdu)
diff -u -r a/gnuradio/gr-blocks/lib/peak_detector_impl.cc b/gnuradio/gr-blocks/lib/peak_detector_impl.cc
--- a/gnuradio/gr-blocks/lib/peak_detector_impl.cc	2020-05-26 14:35:37.066597288 +0800
+++ b/gnuradio/gr-blocks/lib/peak_detector_impl.cc	2020-05-26 14:33:43.054720454 +0800
@@ -15,34 +15,11 @@
 #include "peak_detector_impl.h"
 #include <gnuradio/io_signature.h>
 #include <string.h>
-#include <type_traits>
 #include <limits>
 
 namespace gr {
 namespace blocks {
 
-namespace {
-
-// lowest_value() returns -infinity if the type has a concept of
-// infinity. Otherwise it returns the lowest possible value.
-//
-// Positive infinity is guaranteed by std::numeric_limits<T>::has_infinity, but
-// since we want negative infinity let's use IEEE754.
-template <typename T,
-          typename std::enable_if<std::numeric_limits<T>::is_iec559, int>::type = 0>
-constexpr T lowest_value() noexcept
-{
-    return -std::numeric_limits<T>::infinity();
-}
-
-template <typename T,
-          typename std::enable_if<!std::numeric_limits<T>::is_iec559, int>::type = 0>
-constexpr T lowest_value() noexcept
-{
-    return std::numeric_limits<T>::lowest();
-}
-} // namespace
-
 template <class T>
 typename peak_detector<T>::sptr peak_detector<T>::make(float threshold_factor_rise,
                                                        float threshold_factor_fall,
@@ -84,7 +61,7 @@
 
     memset(optr, 0, noutput_items * sizeof(char));
 
-    T peak_val = lowest_value<T>();
+    T peak_val = std::numeric_limits<T>::min();
     int peak_ind = 0;
     unsigned char state = 0;
     int i = 0;
@@ -112,7 +89,7 @@
             } else {
                 optr[peak_ind] = 1;
                 state = 0;
-                peak_val = lowest_value<T>();
+                peak_val = -(T)INFINITY;
                 // printf("Leaving  State 1: Peak: %f  Peak Ind: %d   i: %d noutput_items:
                 // %d\n", peak_val, peak_ind, i, noutput_items);
             }
diff -u -r a/gnuradio/gr-blocks/lib/random_pdu_impl.cc b/gnuradio/gr-blocks/lib/random_pdu_impl.cc
--- a/gnuradio/gr-blocks/lib/random_pdu_impl.cc	2020-05-26 14:35:37.067597278 +0800
+++ b/gnuradio/gr-blocks/lib/random_pdu_impl.cc	2020-05-26 14:33:43.055720444 +0800
@@ -38,8 +38,9 @@
 {
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pmt::mp("generate"));
-    set_msg_handler(pmt::mp("generate"),
-                    boost::bind(&random_pdu_impl::generate_pdu, this, _1));
+    set_msg_handler(
+        pmt::mp("generate"),
+        boost::bind(&random_pdu_impl::generate_pdu, this, boost::placeholders::_1));
     if (length_modulo < 1)
         throw std::runtime_error("length_module must be >= 1");
     if (max_items < length_modulo)
diff -u -r a/gnuradio/gr-blocks/lib/repeat_impl.cc b/gnuradio/gr-blocks/lib/repeat_impl.cc
--- a/gnuradio/gr-blocks/lib/repeat_impl.cc	2020-05-26 14:35:37.067597278 +0800
+++ b/gnuradio/gr-blocks/lib/repeat_impl.cc	2020-05-26 14:33:43.055720444 +0800
@@ -32,8 +32,9 @@
       d_interp(interp)
 {
     message_port_register_in(pmt::mp("interpolation"));
-    set_msg_handler(pmt::mp("interpolation"),
-                    boost::bind(&repeat_impl::msg_set_interpolation, this, _1));
+    set_msg_handler(
+        pmt::mp("interpolation"),
+        boost::bind(&repeat_impl::msg_set_interpolation, this, boost::placeholders::_1));
 }
 
 void repeat_impl::msg_set_interpolation(pmt::pmt_t msg)
diff -u -r a/gnuradio/gr-blocks/lib/socket_pdu_impl.cc b/gnuradio/gr-blocks/lib/socket_pdu_impl.cc
--- a/gnuradio/gr-blocks/lib/socket_pdu_impl.cc	2020-05-26 14:35:37.068597269 +0800
+++ b/gnuradio/gr-blocks/lib/socket_pdu_impl.cc	2020-05-26 14:33:43.056720434 +0800
@@ -89,7 +89,9 @@
         start_tcp_accept();
 
         set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::tcp_server_send, this, _1));
+                        boost::bind(&socket_pdu_impl::tcp_server_send,
+                                    this,
+                                    boost::placeholders::_1));
     } else if (type == "TCP_CLIENT") {
         boost::system::error_code error = boost::asio::error::host_not_found;
         d_tcp_socket.reset(new boost::asio::ip::tcp::socket(d_io_service));
@@ -99,7 +101,9 @@
         d_tcp_socket->set_option(boost::asio::ip::tcp::no_delay(d_tcp_no_delay));
 
         set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::tcp_client_send, this, _1));
+                        boost::bind(&socket_pdu_impl::tcp_client_send,
+                                    this,
+                                    boost::placeholders::_1));
 
         d_tcp_socket->async_read_some(
             boost::asio::buffer(d_rxbuf),
@@ -118,8 +122,9 @@
                         boost::asio::placeholders::error,
                         boost::asio::placeholders::bytes_transferred));
 
-        set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::udp_send, this, _1));
+        set_msg_handler(
+            pdu::pdu_port_id(),
+            boost::bind(&socket_pdu_impl::udp_send, this, boost::placeholders::_1));
     } else if (type == "UDP_CLIENT") {
         d_udp_socket.reset(
             new boost::asio::ip::udp::socket(d_io_service, d_udp_endpoint));
@@ -131,8 +136,9 @@
                         boost::asio::placeholders::error,
                         boost::asio::placeholders::bytes_transferred));
 
-        set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::udp_send, this, _1));
+        set_msg_handler(
+            pdu::pdu_port_id(),
+            boost::bind(&socket_pdu_impl::udp_send, this, boost::placeholders::_1));
     } else
         throw std::runtime_error("gr::blocks:socket_pdu: unknown socket type");
 
diff -u -r a/gnuradio/gr-blocks/lib/tagged_stream_multiply_length_impl.cc b/gnuradio/gr-blocks/lib/tagged_stream_multiply_length_impl.cc
--- a/gnuradio/gr-blocks/lib/tagged_stream_multiply_length_impl.cc	2020-05-26 14:35:37.069597259 +0800
+++ b/gnuradio/gr-blocks/lib/tagged_stream_multiply_length_impl.cc	2020-05-26 14:33:43.057720424 +0800
@@ -37,9 +37,10 @@
     set_tag_propagation_policy(TPP_DONT);
     set_relative_rate(1, 1);
     message_port_register_in(pmt::intern("set_scalar"));
-    set_msg_handler(
-        pmt::intern("set_scalar"),
-        boost::bind(&tagged_stream_multiply_length_impl::set_scalar_pmt, this, _1));
+    set_msg_handler(pmt::intern("set_scalar"),
+                    boost::bind(&tagged_stream_multiply_length_impl::set_scalar_pmt,
+                                this,
+                                boost::placeholders::_1));
 }
 
 tagged_stream_multiply_length_impl::~tagged_stream_multiply_length_impl() {}
diff -u -r a/gnuradio/gr-blocks/lib/tuntap_pdu_impl.cc b/gnuradio/gr-blocks/lib/tuntap_pdu_impl.cc
--- a/gnuradio/gr-blocks/lib/tuntap_pdu_impl.cc	2020-05-26 14:35:37.070597249 +0800
+++ b/gnuradio/gr-blocks/lib/tuntap_pdu_impl.cc	2020-05-26 14:33:43.058720414 +0800
@@ -86,7 +86,8 @@
 
     // set up input message port
     message_port_register_in(pdu::pdu_port_id());
-    set_msg_handler(pdu::pdu_port_id(), boost::bind(&tuntap_pdu_impl::send, this, _1));
+    set_msg_handler(pdu::pdu_port_id(),
+                    boost::bind(&tuntap_pdu_impl::send, this, boost::placeholders::_1));
 }
 
 int tuntap_pdu_impl::tun_alloc(char* dev, int flags)
diff -u -r a/gnuradio/grc/gui/canvas/colors.py b/gnuradio/grc/gui/canvas/colors.py
--- a/gnuradio/grc/gui/canvas/colors.py	2020-05-26 14:35:37.213595840 +0800
+++ b/gnuradio/grc/gui/canvas/colors.py	2020-05-26 14:33:43.204718976 +0800
@@ -80,7 +80,7 @@
                          #dtype_string          { background-color: #CC66CC; }
                          #dtype_id              { background-color: #DDDDDD; }
                          #dtype_stream_id       { background-color: #DDDDDD; }
-                         #dtype_raw             { background-color: #DDDDDD; }
+                         #dtype_raw             { background-color: #23272A; }
 
                          #enum_custom           { background-color: #EEEEEE; }
                      """
diff -u -r a/gnuradio/gr-digital/lib/chunks_to_symbols_impl.cc b/gnuradio/gr-digital/lib/chunks_to_symbols_impl.cc
--- a/gnuradio/gr-digital/lib/chunks_to_symbols_impl.cc	2020-05-26 14:35:37.092597032 +0800
+++ b/gnuradio/gr-digital/lib/chunks_to_symbols_impl.cc	2020-05-26 14:33:43.081720187 +0800
@@ -57,8 +57,9 @@
     this->message_port_register_in(pmt::mp("set_symbol_table"));
     this->set_msg_handler(
         pmt::mp("set_symbol_table"),
-        boost::bind(
-            &chunks_to_symbols_impl<IN_T, OUT_T>::handle_set_symbol_table, this, _1));
+        boost::bind(&chunks_to_symbols_impl<IN_T, OUT_T>::handle_set_symbol_table,
+                    this,
+                    boost::placeholders::_1));
 }
 
 template <class IN_T, class OUT_T>
diff -u -r a/gnuradio/gr-digital/lib/constellation_receiver_cb_impl.cc b/gnuradio/gr-digital/lib/constellation_receiver_cb_impl.cc
--- a/gnuradio/gr-digital/lib/constellation_receiver_cb_impl.cc	2020-05-26 14:35:37.093597022 +0800
+++ b/gnuradio/gr-digital/lib/constellation_receiver_cb_impl.cc	2020-05-26 14:33:43.082720178 +0800
@@ -49,14 +49,16 @@
             "This receiver only works with constellations of dimension 1.");
 
     message_port_register_in(pmt::mp("set_constellation"));
-    set_msg_handler(
-        pmt::mp("set_constellation"),
-        boost::bind(&constellation_receiver_cb_impl::handle_set_constellation, this, _1));
+    set_msg_handler(pmt::mp("set_constellation"),
+                    boost::bind(&constellation_receiver_cb_impl::handle_set_constellation,
+                                this,
+                                boost::placeholders::_1));
 
     message_port_register_in(pmt::mp("rotate_phase"));
-    set_msg_handler(
-        pmt::mp("rotate_phase"),
-        boost::bind(&constellation_receiver_cb_impl::handle_rotate_phase, this, _1));
+    set_msg_handler(pmt::mp("rotate_phase"),
+                    boost::bind(&constellation_receiver_cb_impl::handle_rotate_phase,
+                                this,
+                                boost::placeholders::_1));
 }
 
 constellation_receiver_cb_impl::~constellation_receiver_cb_impl() {}
diff -u -r a/gnuradio/gr-digital/lib/costas_loop_cc_impl.cc b/gnuradio/gr-digital/lib/costas_loop_cc_impl.cc
--- a/gnuradio/gr-digital/lib/costas_loop_cc_impl.cc	2020-05-26 14:35:37.094597013 +0800
+++ b/gnuradio/gr-digital/lib/costas_loop_cc_impl.cc	2020-05-26 14:33:43.083720168 +0800
@@ -42,7 +42,9 @@
 {
     message_port_register_in(pmt::mp("noise"));
     set_msg_handler(pmt::mp("noise"),
-                    boost::bind(&costas_loop_cc_impl::handle_set_noise, this, _1));
+                    boost::bind(&costas_loop_cc_impl::handle_set_noise,
+                                this,
+                                boost::placeholders::_1));
 }
 
 costas_loop_cc_impl::~costas_loop_cc_impl() {}
diff -u -r a/gnuradio/gr-digital/lib/crc32_async_bb_impl.cc b/gnuradio/gr-digital/lib/crc32_async_bb_impl.cc
--- a/gnuradio/gr-digital/lib/crc32_async_bb_impl.cc	2020-05-26 14:35:37.094597013 +0800
+++ b/gnuradio/gr-digital/lib/crc32_async_bb_impl.cc	2020-05-26 14:33:43.083720168 +0800
@@ -36,9 +36,13 @@
     message_port_register_out(d_out_port);
 
     if (check)
-        set_msg_handler(d_in_port, boost::bind(&crc32_async_bb_impl::check, this, _1));
+        set_msg_handler(
+            d_in_port,
+            boost::bind(&crc32_async_bb_impl::check, this, boost::placeholders::_1));
     else
-        set_msg_handler(d_in_port, boost::bind(&crc32_async_bb_impl::calc, this, _1));
+        set_msg_handler(
+            d_in_port,
+            boost::bind(&crc32_async_bb_impl::calc, this, boost::placeholders::_1));
 }
 
 crc32_async_bb_impl::~crc32_async_bb_impl() {}
diff -u -r a/gnuradio/gr-digital/lib/header_payload_demux_impl.cc b/gnuradio/gr-digital/lib/header_payload_demux_impl.cc
--- a/gnuradio/gr-digital/lib/header_payload_demux_impl.cc	2020-05-26 14:35:37.096596993 +0800
+++ b/gnuradio/gr-digital/lib/header_payload_demux_impl.cc	2020-05-26 14:33:43.085720148 +0800
@@ -138,9 +138,10 @@
     }
     set_tag_propagation_policy(TPP_DONT);
     message_port_register_in(msg_port_id());
-    set_msg_handler(
-        msg_port_id(),
-        boost::bind(&header_payload_demux_impl::parse_header_data_msg, this, _1));
+    set_msg_handler(msg_port_id(),
+                    boost::bind(&header_payload_demux_impl::parse_header_data_msg,
+                                this,
+                                boost::placeholders::_1));
     for (size_t i = 0; i < special_tags.size(); i++) {
         d_special_tags.push_back(pmt::string_to_symbol(special_tags[i]));
         d_special_tags_last_value.push_back(pmt::PMT_NIL);
diff -u -r a/gnuradio/gr-digital/lib/protocol_formatter_async_impl.cc b/gnuradio/gr-digital/lib/protocol_formatter_async_impl.cc
--- a/gnuradio/gr-digital/lib/protocol_formatter_async_impl.cc	2020-05-26 14:35:37.100596953 +0800
+++ b/gnuradio/gr-digital/lib/protocol_formatter_async_impl.cc	2020-05-26 14:33:43.088720118 +0800
@@ -43,7 +43,9 @@
     message_port_register_out(d_pld_port);
 
     set_msg_handler(d_in_port,
-                    boost::bind(&protocol_formatter_async_impl::append, this, _1));
+                    boost::bind(&protocol_formatter_async_impl::append,
+                                this,
+                                boost::placeholders::_1));
 }
 
 protocol_formatter_async_impl::~protocol_formatter_async_impl() {}
diff -u -r a/gnuradio/gr-fec/lib/async_decoder_impl.cc b/gnuradio/gr-fec/lib/async_decoder_impl.cc
--- a/gnuradio/gr-fec/lib/async_decoder_impl.cc	2020-05-26 14:35:37.134596619 +0800
+++ b/gnuradio/gr-fec/lib/async_decoder_impl.cc	2020-05-26 14:33:43.124719764 +0800
@@ -53,10 +53,14 @@
     if (d_packed) {
         d_pack = new blocks::kernel::pack_k_bits(8);
         set_msg_handler(d_in_port,
-                        boost::bind(&async_decoder_impl::decode_packed, this, _1));
+                        boost::bind(&async_decoder_impl::decode_packed,
+                                    this,
+                                    boost::placeholders::_1));
     } else {
         set_msg_handler(d_in_port,
-                        boost::bind(&async_decoder_impl::decode_unpacked, this, _1));
+                        boost::bind(&async_decoder_impl::decode_unpacked,
+                                    this,
+                                    boost::placeholders::_1));
     }
 
     // The maximum frame size is set by the initial frame size of the decoder.
diff -u -r a/gnuradio/gr-fec/lib/async_encoder_impl.cc b/gnuradio/gr-fec/lib/async_encoder_impl.cc
--- a/gnuradio/gr-fec/lib/async_encoder_impl.cc	2020-05-26 14:35:37.134596619 +0800
+++ b/gnuradio/gr-fec/lib/async_encoder_impl.cc	2020-05-26 14:33:43.124719764 +0800
@@ -52,7 +52,9 @@
 
     if (d_packed) {
         set_msg_handler(d_in_port,
-                        boost::bind(&async_encoder_impl::encode_packed, this, _1));
+                        boost::bind(&async_encoder_impl::encode_packed,
+                                    this,
+                                    boost::placeholders::_1));
 
         d_unpack = new blocks::kernel::unpack_k_bits(8);
 
@@ -62,7 +64,9 @@
 
     } else {
         set_msg_handler(d_in_port,
-                        boost::bind(&async_encoder_impl::encode_unpacked, this, _1));
+                        boost::bind(&async_encoder_impl::encode_unpacked,
+                                    this,
+                                    boost::placeholders::_1));
     }
 
     if (d_packed || (strncmp(d_encoder->get_input_conversion(), "pack", 4) == 0)) {
diff -u -r a/gnuradio/gr-fec/lib/depuncture_bb_impl.cc b/gnuradio/gr-fec/lib/depuncture_bb_impl.cc
--- a/gnuradio/gr-fec/lib/depuncture_bb_impl.cc	2020-05-26 14:35:37.135596609 +0800
+++ b/gnuradio/gr-fec/lib/depuncture_bb_impl.cc	2020-05-26 14:33:43.125719754 +0800
@@ -62,7 +62,9 @@
     set_fixed_rate(true);
     set_relative_rate((uint64_t)d_puncsize, (uint64_t)(d_puncsize - d_puncholes));
     set_output_multiple(d_puncsize);
-    // set_msg_handler(boost::bind(&depuncture_bb_impl::catch_msg, this, _1));
+    // set_msg_handler(boost::bind(&depuncture_bb_impl::catch_msg,
+    //                             this,
+    //                             boost::placeholders::_1));
 }
 
 depuncture_bb_impl::~depuncture_bb_impl() {}
diff -u -r a/gnuradio/gr-fec/lib/puncture_bb_impl.cc b/gnuradio/gr-fec/lib/puncture_bb_impl.cc
--- a/gnuradio/gr-fec/lib/puncture_bb_impl.cc	2020-05-26 14:35:37.137596589 +0800
+++ b/gnuradio/gr-fec/lib/puncture_bb_impl.cc	2020-05-26 14:33:43.127719734 +0800
@@ -60,7 +60,9 @@
     set_fixed_rate(true);
     set_relative_rate((uint64_t)(d_puncsize - d_puncholes), (uint64_t)d_puncsize);
     set_output_multiple(d_puncsize - d_puncholes);
-    // set_msg_handler(boost::bind(&puncture_bb_impl::catch_msg, this, _1));
+    // set_msg_handler(boost::bind(&puncture_bb_impl::catch_msg,
+    //                             this,
+    //                             boost::placeholders::_1));
 }
 
 puncture_bb_impl::~puncture_bb_impl() {}
diff -u -r a/gnuradio/gr-fec/lib/puncture_ff_impl.cc b/gnuradio/gr-fec/lib/puncture_ff_impl.cc
--- a/gnuradio/gr-fec/lib/puncture_ff_impl.cc	2020-05-26 14:35:37.137596589 +0800
+++ b/gnuradio/gr-fec/lib/puncture_ff_impl.cc	2020-05-26 14:33:43.127719734 +0800
@@ -60,7 +60,9 @@
     set_fixed_rate(true);
     set_relative_rate((uint64_t)(d_puncsize - d_puncholes), (uint64_t)d_puncsize);
     set_output_multiple(d_puncsize - d_puncholes);
-    // set_msg_handler(boost::bind(&puncture_ff_impl::catch_msg, this, _1));
+    // set_msg_handler(boost::bind(&puncture_ff_impl::catch_msg,
+    //                             this,
+    //                             boost::placeholders::_1));
 }
 
 puncture_ff_impl::~puncture_ff_impl() {}
diff -u -r a/gnuradio/gr-filter/lib/freq_xlating_fir_filter_impl.cc b/gnuradio/gr-filter/lib/freq_xlating_fir_filter_impl.cc
--- a/gnuradio/gr-filter/lib/freq_xlating_fir_filter_impl.cc	2020-05-26 14:35:37.150596461 +0800
+++ b/gnuradio/gr-filter/lib/freq_xlating_fir_filter_impl.cc	2020-05-26 14:33:43.141719596 +0800
@@ -61,7 +61,7 @@
         boost::bind(
             &freq_xlating_fir_filter_impl<IN_T, OUT_T, TAP_T>::handle_set_center_freq,
             this,
-            _1));
+            boost::placeholders::_1));
 }
 
 template <class IN_T, class OUT_T, class TAP_T>
diff -u -r a/gnuradio/gr-filter/lib/mmse_resampler_cc_impl.cc b/gnuradio/gr-filter/lib/mmse_resampler_cc_impl.cc
--- a/gnuradio/gr-filter/lib/mmse_resampler_cc_impl.cc	2020-05-26 14:35:37.153596431 +0800
+++ b/gnuradio/gr-filter/lib/mmse_resampler_cc_impl.cc	2020-05-26 14:33:43.142719587 +0800
@@ -40,8 +40,9 @@
 
     set_inverse_relative_rate(d_mu_inc);
     message_port_register_in(pmt::intern("msg_in"));
-    set_msg_handler(pmt::intern("msg_in"),
-                    boost::bind(&mmse_resampler_cc_impl::handle_msg, this, _1));
+    set_msg_handler(
+        pmt::intern("msg_in"),
+        boost::bind(&mmse_resampler_cc_impl::handle_msg, this, boost::placeholders::_1));
 }
 
 mmse_resampler_cc_impl::~mmse_resampler_cc_impl() { delete d_resamp; }
diff -u -r a/gnuradio/gr-filter/lib/mmse_resampler_ff_impl.cc b/gnuradio/gr-filter/lib/mmse_resampler_ff_impl.cc
--- a/gnuradio/gr-filter/lib/mmse_resampler_ff_impl.cc	2020-05-26 14:35:37.153596431 +0800
+++ b/gnuradio/gr-filter/lib/mmse_resampler_ff_impl.cc	2020-05-26 14:33:43.142719587 +0800
@@ -41,8 +41,9 @@
     set_inverse_relative_rate(d_mu_inc);
 
     message_port_register_in(pmt::intern("msg_in"));
-    set_msg_handler(pmt::intern("msg_in"),
-                    boost::bind(&mmse_resampler_ff_impl::handle_msg, this, _1));
+    set_msg_handler(
+        pmt::intern("msg_in"),
+        boost::bind(&mmse_resampler_ff_impl::handle_msg, this, boost::placeholders::_1));
 }
 
 mmse_resampler_ff_impl::~mmse_resampler_ff_impl() { delete d_resamp; }
diff -u -r a/gnuradio/gr-qtgui/docs/qtgui.dox b/gnuradio/gr-qtgui/docs/qtgui.dox
--- a/gnuradio/gr-qtgui/docs/qtgui.dox	2020-05-26 14:35:37.163596333 +0800
+++ b/gnuradio/gr-qtgui/docs/qtgui.dox	2020-05-26 14:33:43.152719488 +0800
@@ -29,8 +29,6 @@
 
 \li Time Domain (gr::qtgui::time_sink_c and gr::qtgui::time_sink_f):
 x-axis is time, y-axis is amplitude.
-\li Eye pattern (gr::qtgui::eye_sink_c and gr::qtgui::eye_sink_f):
-x-axis is time, y-axis is amplitude.
 \li Frequency Domain or PSD (gr::qtgui::freq_sink_c and
 gr::qtgui::freq_sink_f): x-axis is frequency, y-axis is magnitude in
 dB.
@@ -46,7 +44,7 @@
 \li Combined Sink (gr::qtgui::sink_c and gr::qtgui::sink_f): combines
 time, frequency, waterfall, and constellation plots into one widget.
 
-The time domain, eye pattern, frequency domain, and waterfall have both a complex
+The time domain, frequency domain, and waterfall have both a complex
 and a floating point block. The constellation plot only makes sense
 with complex inputs. The time raster plots accept bits and floats.
 
@@ -90,11 +88,11 @@
 
 \subsection qtgui_menu_trigger Triggering Menu for Time Plots
 
-The time plots and eye pattern plots have triggering capabilities. 
-Triggering can happen when the signal of a specific channel crosses 
-(positive or negative slope) a certain level threshold. Or triggering 
-can be done off a specific stream tag such that whenever a tag of a 
-given key is found, the scope will trigger.
+The time plots have triggering capabilities. Triggering can happen
+when the signal of a specific channel crosses (positive or negative
+slope) a certain level threshold. Or triggering can be done off a
+specific stream tag such that whenever a tag of a given key is found,
+the scope will trigger.
 
 In the signal level mode, the trigger can be either 'auto' or 'normal'
 where the latter will only trigger when the event is seen. The 'auto'
Only in a/gnuradio/gr-qtgui/examples: qtgui_eye_sink_example.grc
Only in a/gnuradio/gr-qtgui/grc: qtgui_eye_sink_x.block.yml
diff -u -r a/gnuradio/gr-qtgui/grc/qtgui.tree.yml b/gnuradio/gr-qtgui/grc/qtgui.tree.yml
--- a/gnuradio/gr-qtgui/grc/qtgui.tree.yml	2020-05-26 14:35:37.165596313 +0800
+++ b/gnuradio/gr-qtgui/grc/qtgui.tree.yml	2020-05-26 14:33:43.155719459 +0800
@@ -1,7 +1,6 @@
 '[Core]':
 - Instrumentation:
   - QT:
-    - qtgui_eye_sink_x
     - qtgui_freq_sink_x
     - qtgui_time_sink_x
     - qtgui_const_sink_x
diff -u -r a/gnuradio/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt b/gnuradio/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt
--- a/gnuradio/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt	2020-05-26 14:35:37.167596293 +0800
+++ b/gnuradio/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt	2020-05-26 14:33:43.157719439 +0800
@@ -16,19 +16,8 @@
   ConstellationDisplayPlot.h
   const_sink_c.h
   displayform.h
-  eyedisplaysform.h
   DisplayPlot.h
-  timecontrolpanel.h
-  eyecontrolpanel.h
-  eyedisplayform.h
-  EyeDisplayPlot.h
-  eye_sink_c.h
-  eye_sink_f.h
   form_menus.h
-  eye_sink_c.h
-  eye_sink_f.h
-  eyecontrolpanel.h
-  EyeDisplayPlot.h
   freqdisplayform.h
   freqcontrolpanel.h
   freq_sink_c.h
Only in a/gnuradio/gr-qtgui/include/gnuradio/qtgui: eyecontrolpanel.h
Only in a/gnuradio/gr-qtgui/include/gnuradio/qtgui: eyedisplayform.h
Only in a/gnuradio/gr-qtgui/include/gnuradio/qtgui: EyeDisplayPlot.h
Only in a/gnuradio/gr-qtgui/include/gnuradio/qtgui: eyedisplaysform.h
Only in a/gnuradio/gr-qtgui/include/gnuradio/qtgui: eye_sink_c.h
Only in a/gnuradio/gr-qtgui/include/gnuradio/qtgui: eye_sink_f.h
diff -u -r a/gnuradio/gr-qtgui/lib/CMakeLists.txt b/gnuradio/gr-qtgui/lib/CMakeLists.txt
--- a/gnuradio/gr-qtgui/lib/CMakeLists.txt	2020-05-26 14:35:37.170596264 +0800
+++ b/gnuradio/gr-qtgui/lib/CMakeLists.txt	2020-05-26 14:33:43.160719409 +0800
@@ -13,7 +13,6 @@
 add_library(gnuradio-qtgui
     DisplayPlot.cc
     FrequencyDisplayPlot.cc
-    EyeDisplayPlot.cc
     TimeDomainDisplayPlot.cc
     TimeRasterDisplayPlot.cc
     timeRasterGlobalData.cc
@@ -24,9 +23,6 @@
     VectorDisplayPlot.cc
     spectrumdisplayform.cc
     displayform.cc
-    eyedisplaysform.cc
-    eyedisplayform.cc
-    eyecontrolpanel.cc
     timedisplayform.cc
     timecontrolpanel.cc
     timerasterdisplayform.cc
@@ -42,8 +38,6 @@
     plot_raster.cc
     sink_c_impl.cc
     sink_f_impl.cc
-    eye_sink_c_impl.cc
-    eye_sink_f_impl.cc
     time_sink_c_impl.cc
     time_sink_f_impl.cc
     time_raster_sink_b_impl.cc
@@ -95,10 +89,7 @@
 QT5_WRAP_CPP(qtgui_moc_sources
     ${qtgui_mod_includedir}/spectrumdisplayform.h
     ${qtgui_mod_includedir}/displayform.h
-    ${qtgui_mod_includedir}/eyedisplaysform.h
-    ${qtgui_mod_includedir}/eyedisplayform.h
     ${qtgui_mod_includedir}/timedisplayform.h
-    ${qtgui_mod_includedir}/eyecontrolpanel.h
     ${qtgui_mod_includedir}/timecontrolpanel.h
     ${qtgui_mod_includedir}/timerasterdisplayform.h
     ${qtgui_mod_includedir}/freqdisplayform.h
@@ -110,7 +101,6 @@
     ${qtgui_mod_includedir}/vectordisplayform.h
     ${qtgui_mod_includedir}/form_menus.h
     ${qtgui_mod_includedir}/DisplayPlot.h
-    ${qtgui_mod_includedir}/EyeDisplayPlot.h
     ${qtgui_mod_includedir}/FrequencyDisplayPlot.h
     ${qtgui_mod_includedir}/TimeDomainDisplayPlot.h
     ${qtgui_mod_includedir}/TimeRasterDisplayPlot.h
diff -u -r a/gnuradio/gr-qtgui/lib/const_sink_c_impl.cc b/gnuradio/gr-qtgui/lib/const_sink_c_impl.cc
--- a/gnuradio/gr-qtgui/lib/const_sink_c_impl.cc	2020-05-26 14:35:37.172596244 +0800
+++ b/gnuradio/gr-qtgui/lib/const_sink_c_impl.cc	2020-05-26 14:33:43.162719390 +0800
@@ -57,8 +57,9 @@
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&const_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&const_sink_c_impl::handle_pdus, this, boost::placeholders::_1));
 
     for (int i = 0; i < d_nconnections; i++) {
         d_residbufs_real.push_back(
diff -u -r a/gnuradio/gr-qtgui/lib/edit_box_msg_impl.cc b/gnuradio/gr-qtgui/lib/edit_box_msg_impl.cc
--- a/gnuradio/gr-qtgui/lib/edit_box_msg_impl.cc	2020-05-26 14:35:37.173596234 +0800
+++ b/gnuradio/gr-qtgui/lib/edit_box_msg_impl.cc	2020-05-26 14:33:43.162719390 +0800
@@ -145,7 +145,9 @@
     message_port_register_out(d_port);
     message_port_register_in(pmt::mp("val"));
 
-    set_msg_handler(pmt::mp("val"), boost::bind(&edit_box_msg_impl::set_value, this, _1));
+    set_msg_handler(
+        pmt::mp("val"),
+        boost::bind(&edit_box_msg_impl::set_value, this, boost::placeholders::_1));
 }
 
 edit_box_msg_impl::~edit_box_msg_impl()
diff -u -r a/gnuradio/gr-qtgui/lib/freq_sink_c_impl.cc b/gnuradio/gr-qtgui/lib/freq_sink_c_impl.cc
--- a/gnuradio/gr-qtgui/lib/freq_sink_c_impl.cc	2020-05-26 14:35:37.173596234 +0800
+++ b/gnuradio/gr-qtgui/lib/freq_sink_c_impl.cc	2020-05-26 14:33:43.163719380 +0800
@@ -70,17 +70,23 @@
 
     // setup bw input port
     message_port_register_in(d_port_bw);
-    set_msg_handler(d_port_bw, boost::bind(&freq_sink_c_impl::handle_set_bw, this, _1));
+    set_msg_handler(
+        d_port_bw,
+        boost::bind(&freq_sink_c_impl::handle_set_bw, this, boost::placeholders::_1));
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&freq_sink_c_impl::handle_set_freq, this, _1));
+    set_msg_handler(
+        d_port,
+        boost::bind(&freq_sink_c_impl::handle_set_freq, this, boost::placeholders::_1));
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&freq_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&freq_sink_c_impl::handle_pdus, this, boost::placeholders::_1));
 
     d_main_gui = NULL;
 
diff -u -r a/gnuradio/gr-qtgui/lib/freq_sink_f_impl.cc b/gnuradio/gr-qtgui/lib/freq_sink_f_impl.cc
--- a/gnuradio/gr-qtgui/lib/freq_sink_f_impl.cc	2020-05-26 14:35:37.174596225 +0800
+++ b/gnuradio/gr-qtgui/lib/freq_sink_f_impl.cc	2020-05-26 14:33:43.163719380 +0800
@@ -70,17 +70,23 @@
 
     // setup bw input port
     message_port_register_in(d_port_bw);
-    set_msg_handler(d_port_bw, boost::bind(&freq_sink_f_impl::handle_set_bw, this, _1));
+    set_msg_handler(
+        d_port_bw,
+        boost::bind(&freq_sink_f_impl::handle_set_bw, this, boost::placeholders::_1));
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&freq_sink_f_impl::handle_set_freq, this, _1));
+    set_msg_handler(
+        d_port,
+        boost::bind(&freq_sink_f_impl::handle_set_freq, this, boost::placeholders::_1));
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&freq_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&freq_sink_f_impl::handle_pdus, this, boost::placeholders::_1));
 
     d_main_gui = NULL;
 
diff -u -r a/gnuradio/gr-qtgui/lib/FrequencyDisplayPlot.cc b/gnuradio/gr-qtgui/lib/FrequencyDisplayPlot.cc
--- a/gnuradio/gr-qtgui/lib/FrequencyDisplayPlot.cc	2020-05-26 14:35:37.171596254 +0800
+++ b/gnuradio/gr-qtgui/lib/FrequencyDisplayPlot.cc	2020-05-26 14:33:43.161719399 +0800
@@ -39,24 +39,20 @@
 
     void setUnitType(const std::string& type) { d_unitType = type; }
 
-    void setYUnit(const std::string& unit) { d_y_unit = unit; }
-
 protected:
     using QwtPlotZoomer::trackerText;
     virtual QwtText trackerText(QPoint const& p) const
     {
         QwtDoublePoint dp = QwtPlotZoomer::invTransform(p);
-        QwtText t(QString("%1 %2, %3 %4")
+        QwtText t(QString("%1 %2, %3 dB")
                       .arg(dp.x(), 0, 'f', getFrequencyPrecision())
                       .arg(d_unitType.c_str())
-                      .arg(dp.y(), 0, 'f', 2)
-                      .arg(d_y_unit.c_str()));
+                      .arg(dp.y(), 0, 'f', 2));
         return t;
     }
 
 private:
     std::string d_unitType;
-    std::string d_y_unit = "dB";
 };
 
 
@@ -557,7 +553,6 @@
     if (unit.length() > 0)
         l += " (" + unit + ")";
     setAxisTitle(QwtPlot::yLeft, QString(l.c_str()));
-    static_cast<FreqDisplayZoomer*>(d_zoomer)->setYUnit(unit);
 }
 
 void FrequencyDisplayPlot::setMinFFTColor(QColor c)
diff -u -r a/gnuradio/gr-qtgui/lib/histogram_sink_f_impl.cc b/gnuradio/gr-qtgui/lib/histogram_sink_f_impl.cc
--- a/gnuradio/gr-qtgui/lib/histogram_sink_f_impl.cc	2020-05-26 14:35:37.174596225 +0800
+++ b/gnuradio/gr-qtgui/lib/histogram_sink_f_impl.cc	2020-05-26 14:33:43.164719370 +0800
@@ -69,8 +69,9 @@
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&histogram_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&histogram_sink_f_impl::handle_pdus, this, boost::placeholders::_1));
 
     // +1 for the PDU buffer
     for (int i = 0; i < d_nconnections + 1; i++) {
diff -u -r a/gnuradio/gr-qtgui/lib/sink_c_impl.cc b/gnuradio/gr-qtgui/lib/sink_c_impl.cc
--- a/gnuradio/gr-qtgui/lib/sink_c_impl.cc	2020-05-26 14:35:37.175596215 +0800
+++ b/gnuradio/gr-qtgui/lib/sink_c_impl.cc	2020-05-26 14:33:43.165719360 +0800
@@ -84,7 +84,9 @@
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&sink_c_impl::handle_set_freq, this, _1));
+    set_msg_handler(
+        d_port,
+        boost::bind(&sink_c_impl::handle_set_freq, this, boost::placeholders::_1));
 
     d_main_gui = NULL;
 
diff -u -r a/gnuradio/gr-qtgui/lib/sink_f_impl.cc b/gnuradio/gr-qtgui/lib/sink_f_impl.cc
--- a/gnuradio/gr-qtgui/lib/sink_f_impl.cc	2020-05-26 14:35:37.175596215 +0800
+++ b/gnuradio/gr-qtgui/lib/sink_f_impl.cc	2020-05-26 14:33:43.165719360 +0800
@@ -83,7 +83,9 @@
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&sink_f_impl::handle_set_freq, this, _1));
+    set_msg_handler(
+        d_port,
+        boost::bind(&sink_f_impl::handle_set_freq, this, boost::placeholders::_1));
 
     d_main_gui = NULL;
 
diff -u -r a/gnuradio/gr-qtgui/lib/time_raster_sink_b_impl.cc b/gnuradio/gr-qtgui/lib/time_raster_sink_b_impl.cc
--- a/gnuradio/gr-qtgui/lib/time_raster_sink_b_impl.cc	2020-05-26 14:35:37.176596205 +0800
+++ b/gnuradio/gr-qtgui/lib/time_raster_sink_b_impl.cc	2020-05-26 14:33:43.166719350 +0800
@@ -72,7 +72,9 @@
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
     set_msg_handler(pmt::mp("in"),
-                    boost::bind(&time_raster_sink_b_impl::handle_pdus, this, _1));
+                    boost::bind(&time_raster_sink_b_impl::handle_pdus,
+                                this,
+                                boost::placeholders::_1));
 
     d_scale = 1.0f;
 
diff -u -r a/gnuradio/gr-qtgui/lib/time_raster_sink_f_impl.cc b/gnuradio/gr-qtgui/lib/time_raster_sink_f_impl.cc
--- a/gnuradio/gr-qtgui/lib/time_raster_sink_f_impl.cc	2020-05-26 14:35:37.176596205 +0800
+++ b/gnuradio/gr-qtgui/lib/time_raster_sink_f_impl.cc	2020-05-26 14:33:43.166719350 +0800
@@ -72,7 +72,9 @@
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
     set_msg_handler(pmt::mp("in"),
-                    boost::bind(&time_raster_sink_f_impl::handle_pdus, this, _1));
+                    boost::bind(&time_raster_sink_f_impl::handle_pdus,
+                                this,
+                                boost::placeholders::_1));
 
     d_icols = static_cast<int>(ceil(d_cols));
     d_tmpflt = (float*)volk_malloc(d_icols * sizeof(float), volk_get_alignment());
diff -u -r a/gnuradio/gr-qtgui/lib/time_sink_c_impl.cc b/gnuradio/gr-qtgui/lib/time_sink_c_impl.cc
--- a/gnuradio/gr-qtgui/lib/time_sink_c_impl.cc	2020-05-26 14:35:37.176596205 +0800
+++ b/gnuradio/gr-qtgui/lib/time_sink_c_impl.cc	2020-05-26 14:33:43.166719350 +0800
@@ -68,7 +68,9 @@
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&time_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&time_sink_c_impl::handle_pdus, this, boost::placeholders::_1));
 
     // +2 for the PDU message buffers
     for (unsigned int n = 0; n < d_nconnections + 2; n++) {
diff -u -r a/gnuradio/gr-qtgui/lib/time_sink_f_impl.cc b/gnuradio/gr-qtgui/lib/time_sink_f_impl.cc
--- a/gnuradio/gr-qtgui/lib/time_sink_f_impl.cc	2020-05-26 14:35:37.176596205 +0800
+++ b/gnuradio/gr-qtgui/lib/time_sink_f_impl.cc	2020-05-26 14:33:43.166719350 +0800
@@ -68,7 +68,9 @@
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&time_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&time_sink_f_impl::handle_pdus, this, boost::placeholders::_1));
 
     // +1 for the PDU buffer
     for (unsigned int n = 0; n < d_nconnections + 1; n++) {
diff -u -r a/gnuradio/gr-qtgui/lib/waterfall_sink_c_impl.cc b/gnuradio/gr-qtgui/lib/waterfall_sink_c_impl.cc
--- a/gnuradio/gr-qtgui/lib/waterfall_sink_c_impl.cc	2020-05-26 14:35:37.177596195 +0800
+++ b/gnuradio/gr-qtgui/lib/waterfall_sink_c_impl.cc	2020-05-26 14:33:43.167719340 +0800
@@ -106,19 +106,24 @@
     // setup bw input port
     message_port_register_in(d_port_bw);
     set_msg_handler(d_port_bw,
-                    boost::bind(&waterfall_sink_c_impl::handle_set_bw, this, _1));
+                    boost::bind(&waterfall_sink_c_impl::handle_set_bw,
+                                this,
+                                boost::placeholders::_1));
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
     set_msg_handler(d_port,
-                    boost::bind(&waterfall_sink_c_impl::handle_set_freq, this, _1));
+                    boost::bind(&waterfall_sink_c_impl::handle_set_freq,
+                                this,
+                                boost::placeholders::_1));
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&waterfall_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&waterfall_sink_c_impl::handle_pdus, this, boost::placeholders::_1));
 }
 
 waterfall_sink_c_impl::~waterfall_sink_c_impl()
diff -u -r a/gnuradio/gr-qtgui/lib/waterfall_sink_f_impl.cc b/gnuradio/gr-qtgui/lib/waterfall_sink_f_impl.cc
--- a/gnuradio/gr-qtgui/lib/waterfall_sink_f_impl.cc	2020-05-26 14:35:37.177596195 +0800
+++ b/gnuradio/gr-qtgui/lib/waterfall_sink_f_impl.cc	2020-05-26 14:33:43.167719340 +0800
@@ -104,19 +104,24 @@
     // setup bw input port
     message_port_register_in(d_port_bw);
     set_msg_handler(d_port_bw,
-                    boost::bind(&waterfall_sink_f_impl::handle_set_bw, this, _1));
+                    boost::bind(&waterfall_sink_f_impl::handle_set_bw,
+                                this,
+                                boost::placeholders::_1));
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
     set_msg_handler(d_port,
-                    boost::bind(&waterfall_sink_f_impl::handle_set_freq, this, _1));
+                    boost::bind(&waterfall_sink_f_impl::handle_set_freq,
+                                this,
+                                boost::placeholders::_1));
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&waterfall_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&waterfall_sink_f_impl::handle_pdus, this, boost::placeholders::_1));
 }
 
 waterfall_sink_f_impl::~waterfall_sink_f_impl()
diff -u -r a/gnuradio/gr-qtgui/python/qtgui/qa_qtgui.py b/gnuradio/gr-qtgui/python/qtgui/qa_qtgui.py
--- a/gnuradio/gr-qtgui/python/qtgui/qa_qtgui.py	2020-05-26 14:35:37.178596185 +0800
+++ b/gnuradio/gr-qtgui/python/qtgui/qa_qtgui.py	2020-05-26 14:33:43.168719330 +0800
@@ -69,11 +69,5 @@
     def test12(self):
         self.qtsnk = qtgui.histogram_sink_f(1024, 100, -1, 1, "Test", 1)
 
-    def test13(self):
-        self.qtsnk = qtgui.eye_sink_c(1024, 1, "Test", 1)
-
-    def test13(self):
-        self.qtsnk = qtgui.eye_sink_c(1024, 1, "Test", 1)
-
 if __name__ == '__main__':
     gr_unittest.run(test_qtgui, "test_qtgui.xml")
diff -u -r a/gnuradio/gr-qtgui/swig/qtgui_swig.i b/gnuradio/gr-qtgui/swig/qtgui_swig.i
--- a/gnuradio/gr-qtgui/swig/qtgui_swig.i	2020-05-26 14:35:37.178596185 +0800
+++ b/gnuradio/gr-qtgui/swig/qtgui_swig.i	2020-05-26 14:33:43.168719330 +0800
@@ -60,11 +60,8 @@
 #include "gnuradio/qtgui/form_menus.h"
 #include "gnuradio/qtgui/DisplayPlot.h"
 #include "gnuradio/qtgui/displayform.h"
-#include "gnuradio/qtgui/eyedisplaysform.h"
 #include "gnuradio/qtgui/sink_c.h"
 #include "gnuradio/qtgui/sink_f.h"
-#include "gnuradio/qtgui/eye_sink_c.h"
-#include "gnuradio/qtgui/eye_sink_f.h"
 #include "gnuradio/qtgui/time_sink_c.h"
 #include "gnuradio/qtgui/time_sink_f.h"
 #include "gnuradio/qtgui/time_raster_sink_b.h"
@@ -83,8 +80,6 @@
 
 %include "gnuradio/qtgui/sink_c.h"
 %include "gnuradio/qtgui/sink_f.h"
-%include "gnuradio/qtgui/eye_sink_c.h"
-%include "gnuradio/qtgui/eye_sink_f.h"
 %include "gnuradio/qtgui/time_sink_c.h"
 %include "gnuradio/qtgui/time_sink_f.h"
 %include "gnuradio/qtgui/time_raster_sink_b.h"
@@ -102,8 +97,6 @@
 
 GR_SWIG_BLOCK_MAGIC2(qtgui, sink_c);
 GR_SWIG_BLOCK_MAGIC2(qtgui, sink_f);
-GR_SWIG_BLOCK_MAGIC2(qtgui, eye_sink_c);
-GR_SWIG_BLOCK_MAGIC2(qtgui, eye_sink_f);
 GR_SWIG_BLOCK_MAGIC2(qtgui, time_sink_c);
 GR_SWIG_BLOCK_MAGIC2(qtgui, time_sink_f);
 GR_SWIG_BLOCK_MAGIC2(qtgui, time_raster_sink_b);
diff -u -r a/gnuradio/gr-uhd/grc/gen_uhd_usrp_blocks.py b/gnuradio/gr-uhd/grc/gen_uhd_usrp_blocks.py
--- a/gnuradio/gr-uhd/grc/gen_uhd_usrp_blocks.py	2020-05-26 14:35:37.187596096 +0800
+++ b/gnuradio/gr-uhd/grc/gen_uhd_usrp_blocks.py	2020-05-26 14:33:43.177719242 +0800
@@ -138,11 +138,9 @@
                 channels=list(range(0,${'$'}{nchan})),
                 ${'%'} endif
             ),
-            % if sourk == 'sink':
             ${'%'} if len_tag_name:
             ${'$'}{len_tag_name},
             ${'%'} endif
-            % endif
         )
         ${'%'} if clock_rate():
         self.${'$'}{id}.set_clock_rate(${'$'}{clock_rate}, uhd.ALL_MBOARDS)
diff -u -r a/gnuradio/gr-uhd/grc/uhd_amsg_source.block.yml b/gnuradio/gr-uhd/grc/uhd_amsg_source.block.yml
--- a/gnuradio/gr-uhd/grc/uhd_amsg_source.block.yml	2020-05-26 14:35:37.187596096 +0800
+++ b/gnuradio/gr-uhd/grc/uhd_amsg_source.block.yml	2020-05-26 14:33:43.177719242 +0800
@@ -8,8 +8,8 @@
     hide: ${ 'none' if dev_addr else 'part' }
 
 outputs:
--   domain: message
-    id: msg
+-   domain: stream
+    dtype: msg
 
 templates:
     imports: from gnuradio import uhd
diff -u -r a/gnuradio/gr-uhd/lib/usrp_block_impl.cc b/gnuradio/gr-uhd/lib/usrp_block_impl.cc
--- a/gnuradio/gr-uhd/lib/usrp_block_impl.cc	2020-05-26 14:35:37.189596077 +0800
+++ b/gnuradio/gr-uhd/lib/usrp_block_impl.cc	2020-05-26 14:33:43.179719222 +0800
@@ -125,12 +125,18 @@
     // Set up message ports:
     message_port_register_in(pmt::mp("command"));
     set_msg_handler(pmt::mp("command"),
-                    boost::bind(&usrp_block_impl::msg_handler_command, this, _1));
+                    boost::bind(&usrp_block_impl::msg_handler_command,
+                                this,
+                                boost::placeholders::_1));
 
 // cuz we lazy:
-#define REGISTER_CMD_HANDLER(key, _handler) \
-    register_msg_cmd_handler(key,           \
-                             boost::bind(&usrp_block_impl::_handler, this, _1, _2, _3))
+#define REGISTER_CMD_HANDLER(key, _handler)                          \
+    register_msg_cmd_handler(key,                                    \
+                             boost::bind(&usrp_block_impl::_handler, \
+                                         this,                       \
+                                         boost::placeholders::_1,    \
+                                         boost::placeholders::_2,    \
+                                         boost::placeholders::_3))
     // Register default command handlers:
     REGISTER_CMD_HANDLER(cmd_freq_key(), _cmd_handler_freq);
     REGISTER_CMD_HANDLER(cmd_gain_key(), _cmd_handler_gain);
@@ -245,11 +251,12 @@
         } else if (_dev->get_clock_source(mboard_index) == "mimo") {
             sensor_name = "mimo_locked";
         }
-        if (not _wait_for_locked_sensor(
-                get_mboard_sensor_names(mboard_index),
-                sensor_name,
-                boost::bind(
-                    &usrp_block_impl::get_mboard_sensor, this, _1, mboard_index))) {
+        if (not _wait_for_locked_sensor(get_mboard_sensor_names(mboard_index),
+                                        sensor_name,
+                                        boost::bind(&usrp_block_impl::get_mboard_sensor,
+                                                    this,
+                                                    boost::placeholders::_1,
+                                                    mboard_index))) {
             GR_LOG_WARN(
                 d_logger,
                 boost::format(
diff -u -r a/gnuradio/gr-uhd/lib/usrp_source_impl.cc b/gnuradio/gr-uhd/lib/usrp_source_impl.cc
--- a/gnuradio/gr-uhd/lib/usrp_source_impl.cc	2020-05-26 14:35:37.190596067 +0800
+++ b/gnuradio/gr-uhd/lib/usrp_source_impl.cc	2020-05-26 14:33:43.180719212 +0800
@@ -45,8 +45,9 @@
 
     _samp_rate = this->get_samp_rate();
     _samps_per_packet = 1;
-    register_msg_cmd_handler(cmd_tag_key(),
-                             boost::bind(&usrp_source_impl::_cmd_handler_tag, this, _1));
+    register_msg_cmd_handler(
+        cmd_tag_key(),
+        boost::bind(&usrp_source_impl::_cmd_handler_tag, this, boost::placeholders::_1));
 }
 
 usrp_source_impl::~usrp_source_impl() {}
diff -u -r a/gnuradio/gr-zeromq/lib/pub_msg_sink_impl.cc b/gnuradio/gr-zeromq/lib/pub_msg_sink_impl.cc
--- a/gnuradio/gr-zeromq/lib/pub_msg_sink_impl.cc	2020-05-26 14:35:37.205595919 +0800
+++ b/gnuradio/gr-zeromq/lib/pub_msg_sink_impl.cc	2020-05-26 14:33:43.195719065 +0800
@@ -50,7 +50,9 @@
     }
 
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&pub_msg_sink_impl::handler, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&pub_msg_sink_impl::handler, this, boost::placeholders::_1));
 }
 
 pub_msg_sink_impl::~pub_msg_sink_impl()
diff -u -r a/gnuradio/gr-zeromq/lib/push_msg_sink_impl.cc b/gnuradio/gr-zeromq/lib/push_msg_sink_impl.cc
--- a/gnuradio/gr-zeromq/lib/push_msg_sink_impl.cc	2020-05-26 14:35:37.205595919 +0800
+++ b/gnuradio/gr-zeromq/lib/push_msg_sink_impl.cc	2020-05-26 14:33:43.195719065 +0800
@@ -50,7 +50,9 @@
     }
 
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&push_msg_sink_impl::handler, this, _1));
+    set_msg_handler(
+        pmt::mp("in"),
+        boost::bind(&push_msg_sink_impl::handler, this, boost::placeholders::_1));
 }
 
 push_msg_sink_impl::~push_msg_sink_impl()
